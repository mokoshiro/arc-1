// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/arclet/api/proto/arclet.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_b16edae7766f5ab2, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type CreateTrackerResponse struct {
	Port                 string   `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTrackerResponse) Reset()         { *m = CreateTrackerResponse{} }
func (m *CreateTrackerResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTrackerResponse) ProtoMessage()    {}
func (*CreateTrackerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b16edae7766f5ab2, []int{1}
}

func (m *CreateTrackerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTrackerResponse.Unmarshal(m, b)
}
func (m *CreateTrackerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTrackerResponse.Marshal(b, m, deterministic)
}
func (m *CreateTrackerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTrackerResponse.Merge(m, src)
}
func (m *CreateTrackerResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTrackerResponse.Size(m)
}
func (m *CreateTrackerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTrackerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTrackerResponse proto.InternalMessageInfo

func (m *CreateTrackerResponse) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "proto.Empty")
	proto.RegisterType((*CreateTrackerResponse)(nil), "proto.CreateTrackerResponse")
}

func init() { proto.RegisterFile("pkg/arclet/api/proto/arclet.proto", fileDescriptor_b16edae7766f5ab2) }

var fileDescriptor_b16edae7766f5ab2 = []byte{
	// 139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2c, 0xc8, 0x4e, 0xd7,
	0x4f, 0x2c, 0x4a, 0xce, 0x49, 0x2d, 0xd1, 0x4f, 0x2c, 0xc8, 0xd4, 0x2f, 0x28, 0xca, 0x2f, 0xc9,
	0x87, 0x0a, 0xe8, 0x81, 0x39, 0x42, 0xac, 0x60, 0x4a, 0x89, 0x9d, 0x8b, 0xd5, 0x35, 0xb7, 0xa0,
	0xa4, 0x52, 0x49, 0x9b, 0x4b, 0xd4, 0xb9, 0x28, 0x35, 0xb1, 0x24, 0x35, 0xa4, 0x28, 0x31, 0x39,
	0x3b, 0xb5, 0x28, 0x28, 0xb5, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x88, 0x8b, 0xa5, 0x20,
	0xbf, 0xa8, 0x44, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xcc, 0x36, 0x72, 0xe7, 0x62, 0x73,
	0x04, 0x1b, 0x26, 0x64, 0xcb, 0xc5, 0x8b, 0xa2, 0x4d, 0x88, 0x07, 0x62, 0xbe, 0x1e, 0xd8, 0x54,
	0x29, 0x19, 0x28, 0x0f, 0xab, 0xd1, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x69, 0x63, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x63, 0x64, 0x59, 0x27, 0xb1, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ArcletClient is the client API for Arclet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArcletClient interface {
	CreateTracker(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CreateTrackerResponse, error)
}

type arcletClient struct {
	cc *grpc.ClientConn
}

func NewArcletClient(cc *grpc.ClientConn) ArcletClient {
	return &arcletClient{cc}
}

func (c *arcletClient) CreateTracker(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CreateTrackerResponse, error) {
	out := new(CreateTrackerResponse)
	err := c.cc.Invoke(ctx, "/proto.Arclet/CreateTracker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArcletServer is the server API for Arclet service.
type ArcletServer interface {
	CreateTracker(context.Context, *Empty) (*CreateTrackerResponse, error)
}

func RegisterArcletServer(s *grpc.Server, srv ArcletServer) {
	s.RegisterService(&_Arclet_serviceDesc, srv)
}

func _Arclet_CreateTracker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArcletServer).CreateTracker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Arclet/CreateTracker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArcletServer).CreateTracker(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Arclet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Arclet",
	HandlerType: (*ArcletServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTracker",
			Handler:    _Arclet_CreateTracker_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/arclet/api/proto/arclet.proto",
}
